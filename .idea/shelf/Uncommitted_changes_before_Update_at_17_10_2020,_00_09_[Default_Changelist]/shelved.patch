Index: src/org/academiadecodigo/bootcamp/game/GameLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.academiadecodigo.bootcamp.game;\n\nimport org.academiadecodigo.bootcamp.menu.MenuOption;\nimport org.academiadecodigo.simplegraphics.graphics.Rectangle;\nimport org.academiadecodigo.simplegraphics.graphics.Color;\nimport org.academiadecodigo.simplegraphics.graphics.Text;\n\npublic class GameLayout {\n\n    private int width;\n    private int height;\n    private int xMargin;\n    private int yMargin;\n    private Color backgroundColor;\n    private Rectangle marker;\n    private Text title;\n    private Text[] menuOptions = new Text[MenuOption.values().length];\n    private Text instructions;\n    private Text credits;\n\n    public GameLayout(int width, int height, int xMargin, int yMargin, Color backgroundColor) {\n        this.width = width;\n        this.height = height;\n        this.xMargin = xMargin;\n        this.yMargin = yMargin;\n        this.backgroundColor = backgroundColor;\n    }\n\n    public Rectangle getMarker() {\n        return marker;\n    }\n\n    public void drawBackground(){\n        Rectangle rectangle = new Rectangle(xMargin, yMargin, width, height);\n        rectangle.setColor(backgroundColor);\n        rectangle.fill();\n    }\n\n    public void drawTitle(){\n        title = new Text(width/2 - xMargin, 100, \"MANURAMI\");\n        title.grow(100, 40);\n        title.setColor(Color.WHITE);\n        title.draw();\n    }\n\n    public void drawMenuOptions(MenuOption optionName){\n        int indexMenuOption = MenuOption.valueOf(optionName.toString()).ordinal();\n        int spacing = indexMenuOption * 50;\n        menuOptions[indexMenuOption] = new Text(350, 200 + spacing, optionName.toString());\n        menuOptions[indexMenuOption].setColor(Color.WHITE);\n        menuOptions[indexMenuOption].grow(20, 8);\n        menuOptions[indexMenuOption].draw();\n    }\n\n    public void drawMarker(){\n        marker = new Rectangle(300, 205, 10, 10);\n        marker.setColor(Color.WHITE);\n        marker.fill();\n    }\n\n    public void drawMenu(){\n        drawTitle();\n        for(MenuOption menuOption : MenuOption.values()){\n            drawMenuOptions(menuOption);\n        }\n        drawMarker();\n    }\n\n    public void closeMenu(){\n        title.delete();\n        marker.delete();\n        for(Text menuOption : menuOptions){\n            menuOption.delete();\n        }\n    }\n\n    public void drawGame() {\n        Game game = new Game();\n        game.drawTextScore(this);\n        //gameDisplay.drawSupportKeys();\n        game.drawScoreValue(this);\n        game.drawKeyA();\n        game.drawKeyS();\n        game.drawKeyD();\n        game.drawTarget(this);\n        System.out.println();\n    }\n\n    public void closeGame(){\n\n    }\n\n    public void drawInstructions(){\n        instructions = new Text(width/2 - xMargin, height/2 - yMargin, \"Instructions...\");\n        instructions.grow(20, 8);\n        instructions.setColor(Color.WHITE);\n        instructions.draw();\n    }\n\n    public void closeInstructions(){\n        instructions.delete();\n    }\n\n    public void drawCredits(){\n        credits = new Text(width/2 - xMargin, height/2 - yMargin, \"Credits...\");\n        credits.grow(20, 8);\n        credits.setColor(Color.WHITE);\n        credits.draw();\n    }\n\n    public void closeCredits(){\n        credits.delete();\n    }\n\n    public int getHeight() {\n        return height;\n    }\n\n    public int getxMargin() {\n        return xMargin;\n    }\n\n    public int getWidth() {\n        return width;\n    }\n\n    public int getyMargin() {\n        return yMargin;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/org/academiadecodigo/bootcamp/game/GameLayout.java	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ src/org/academiadecodigo/bootcamp/game/GameLayout.java	(date 1602887152070)
@@ -91,7 +91,8 @@
     }
 
     public void drawInstructions(){
-        instructions = new Text(width/2 - xMargin, height/2 - yMargin, "Instructions...");
+        instructions = new Text(width/2 - xMargin, 100, "Instructions: ");
+        //Please pay careful attention to the balls and their respective colours. If a ball reaches the target (you know, the cute white circle in the middle of the screen, be prepared to click on the combination keys ASD to add to your score! \n I hope you have a ball!
         instructions.grow(20, 8);
         instructions.setColor(Color.WHITE);
         instructions.draw();
@@ -102,7 +103,7 @@
     }
 
     public void drawCredits(){
-        credits = new Text(width/2 - xMargin, height/2 - yMargin, "Credits...");
+        credits = new Text(width/2 - xMargin, height/2 - yMargin, "Credits: ");
         credits.grow(20, 8);
         credits.setColor(Color.WHITE);
         credits.draw();
Index: src/org/academiadecodigo/bootcamp/menu/KeyboardOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.academiadecodigo.bootcamp.menu;\n\nimport jdk.swing.interop.SwingInterOpUtils;\nimport org.academiadecodigo.bootcamp.game.Game;\nimport org.academiadecodigo.bootcamp.game.GameLayout;\nimport org.academiadecodigo.bootcamp.resources.Sound;\nimport org.academiadecodigo.simplegraphics.keyboard.Keyboard;\nimport org.academiadecodigo.simplegraphics.keyboard.KeyboardEvent;\nimport org.academiadecodigo.simplegraphics.keyboard.KeyboardEventType;\nimport org.academiadecodigo.simplegraphics.keyboard.KeyboardHandler;\n\nimport java.awt.event.KeyEvent;\nimport java.io.File;\n\npublic class KeyboardOptions implements KeyboardHandler {\n\n    private Keyboard keyboard;\n    private GameLayout gameLayout;\n    private Game game;\n    private MenuOption selectedMenuOption;\n    private boolean menuLocked;\n    private String gamePage;\n\n    public void menuOptions(GameLayout gameLayout) {\n\n        this.gameLayout = gameLayout;\n\n        selectedMenuOption = MenuOption.values()[0];\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent wPressed = new KeyboardEvent();\n            wPressed.setKey(KeyboardEvent.KEY_W);\n            wPressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(wPressed);\n        } //Listening to W key\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent aPressed = new KeyboardEvent();\n            aPressed.setKey(KeyboardEvent.KEY_A);\n            aPressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(aPressed);\n        } //Listening to A key\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent sPressed = new KeyboardEvent();\n            sPressed.setKey(KeyboardEvent.KEY_S);\n            sPressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(sPressed);\n        } //Listening to S key\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent dPressed = new KeyboardEvent();\n            dPressed.setKey(KeyboardEvent.KEY_D);\n            dPressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(dPressed);\n        } //Listening to D key\n\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent enterPressed = new KeyboardEvent();\n            enterPressed.setKey(KeyEvent.VK_ENTER);\n            enterPressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(enterPressed);\n        } //Listening to ENTER key\n\n        {\n            keyboard = new Keyboard(this);\n            KeyboardEvent escapePressed = new KeyboardEvent();\n            escapePressed.setKey(KeyEvent.VK_ESCAPE);\n            escapePressed.setKeyboardEventType(KeyboardEventType.KEY_PRESSED);\n            keyboard.addEventListener(escapePressed);\n        } //Listening to ESCAPE key\n\n\n    }\n\n    @Override\n    public void keyPressed(KeyboardEvent keyboardEvent) {\n\n        Sound menuSound = new Sound();\n        File soundFile = new File(\"resources/sounds/btn_sound_menu.wav\");\n        menuSound.playSound(soundFile);\n\n        switch (keyboardEvent.getKey()) {\n\n            case (KeyboardEvent.KEY_W):\n\n                if (!menuLocked) {\n\n                    if (selectedMenuOption == MenuOption.values()[0]) {\n                        gameLayout.getMarker().translate(0, 50 * (MenuOption.values().length - 1));\n                        selectedMenuOption = MenuOption.values()[MenuOption.values().length - 1];\n\n                    } else {\n\n                        gameLayout.getMarker().translate(0, -50);\n                        selectedMenuOption = MenuOption.values()[MenuOption.valueOf(selectedMenuOption.toString()).ordinal() - 1];\n\n                    }\n                }\n\n                break;\n\n            case (KeyboardEvent.KEY_A):\n                //nada no menu\n                break;\n\n            case (KeyboardEvent.KEY_S):\n\n                if (!menuLocked) {\n\n                    if (selectedMenuOption == MenuOption.values()[MenuOption.values().length - 1]) {\n                        gameLayout.getMarker().translate(0, -50 * (MenuOption.values().length - 1));\n                        selectedMenuOption = MenuOption.values()[0];\n\n                    } else {\n\n                        gameLayout.getMarker().translate(0, 50);\n                        selectedMenuOption = MenuOption.values()[MenuOption.valueOf(selectedMenuOption.toString()).ordinal() + 1];\n\n                    }\n                }\n\n                break;\n\n            case (KeyboardEvent.KEY_D):\n                //nada no menu\n                break;\n\n\n            case (KeyEvent.VK_ENTER):\n\n                if (!menuLocked) {\n\n                    if (selectedMenuOption == MenuOption.EXIT) {\n\n                        System.exit(0);\n\n                    } else if (selectedMenuOption == MenuOption.CREDITS) {\n\n                        gameLayout.closeMenu();\n                        gameLayout.drawCredits();\n                        menuLocked = true;\n                        gamePage = \"Credits\";\n\n                    } else if (selectedMenuOption == MenuOption.INSTRUCTIONS) {\n                        gameLayout.closeMenu();\n                        gameLayout.drawInstructions();\n                        menuLocked = true;\n                        gamePage = \"Instructions\";\n\n                    } else if (selectedMenuOption == MenuOption.START) {\n\n                        menuLocked = true;\n                        gameLayout.closeMenu();\n                        gameLayout.drawGame();\n                        game = new Game();\n                        game.startBalls();\n                        gamePage = \"Start\";\n\n                    }\n\n                    selectedMenuOption = MenuOption.values()[0];\n\n                }\n\n                break;\n\n            case (KeyEvent.VK_ESCAPE):\n\n                menuLocked= false;\n\n                if(gamePage == \"Start\"){\n\n                    gameLayout.closeGame();\n                    gameLayout.drawMenu();\n\n                }else if( gamePage == \"Credits\"){\n\n                    gameLayout.closeCredits();\n                    gameLayout.drawMenu();\n\n                }else if( gamePage == \"Instructions\"){\n\n                    gameLayout.closeInstructions();\n                    gameLayout.drawMenu();\n\n                }\n                break;\n\n                /*gameLayout.closeMenu();\n                gameLayout.getMarker().translate(0, 50 * (MenuOption.valueOf(selectedMenuOption.toString()).ordinal()));\n                menuLocked = false;*/\n\n        }\n\n    }\n\n    @Override\n    public void keyReleased(KeyboardEvent keyboardEvent) {\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/org/academiadecodigo/bootcamp/menu/KeyboardOptions.java	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ src/org/academiadecodigo/bootcamp/menu/KeyboardOptions.java	(date 1602889405863)
@@ -8,6 +8,7 @@
 import org.academiadecodigo.simplegraphics.keyboard.KeyboardEvent;
 import org.academiadecodigo.simplegraphics.keyboard.KeyboardEventType;
 import org.academiadecodigo.simplegraphics.keyboard.KeyboardHandler;
+import org.academiadecodigo.simplegraphics.pictures.Picture;
 
 import java.awt.event.KeyEvent;
 import java.io.File;
@@ -20,6 +21,7 @@
     private MenuOption selectedMenuOption;
     private boolean menuLocked;
     private String gamePage;
+    private Picture menuLoading;
 
     public void menuOptions(GameLayout gameLayout) {
 
@@ -158,6 +160,14 @@
 
                         menuLocked = true;
                         gameLayout.closeMenu();
+                        /*menuLoading = new Picture(450,450, "resources/img/loading.jpg");
+                        menuLoading.draw();
+                        try {
+                            Thread.sleep(600);
+                        } catch (InterruptedException ie){
+                            System.out.println("Error");
+                        }
+                        menuLoading.delete();*/
                         gameLayout.drawGame();
                         game = new Game();
                         game.startBalls();
Index: .idea/uiDesigner.xml
===================================================================
--- .idea/uiDesigner.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/uiDesigner.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/libraries/lib.xml
===================================================================
--- .idea/libraries/lib.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/libraries/lib.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,12 +0,0 @@
-<component name="libraryTable">
-  <library name="lib">
-    <CLASSES>
-      <root url="file://$PROJECT_DIR$/lib" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES>
-      <root url="jar://$PROJECT_DIR$/lib/simplegraphics.jar!/" />
-    </SOURCES>
-    <jarDirectory url="file://$PROJECT_DIR$/lib" recursive="false" />
-  </library>
-</component>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
--- .idea/.gitignore	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/.gitignore	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/codeStyles/codeStyleConfig.xml
===================================================================
--- .idea/codeStyles/codeStyleConfig.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/codeStyles/codeStyleConfig.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,5 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <state>
-    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
-  </state>
-</component>
\ No newline at end of file
Index: .idea/aws.xml
===================================================================
--- .idea/aws.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/aws.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="accountSettings">
-    <option name="activeRegion" value="us-east-1" />
-    <option name="recentlyUsedRegions">
-      <list>
-        <option value="us-east-1" />
-      </list>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/codeStyles/Project.xml
===================================================================
--- .idea/codeStyles/Project.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/codeStyles/Project.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
@@ -1,7 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <code_scheme name="Project" version="173">
-    <ScalaCodeStyleSettings>
-      <option name="MULTILINE_STRING_CLOSING_QUOTES_ON_NEW_LINE" value="true" />
-    </ScalaCodeStyleSettings>
-  </code_scheme>
-</component>
\ No newline at end of file
Index: manurami.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- manurami.iml	(date 1602883058540)
+++ manurami.iml	(date 1602883058540)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="simplegraphics" level="project" />
+    <orderEntry type="library" name="simplegraphics" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/simplegraphics2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/libraries/simplegraphics2.xml	(date 1602883058535)
+++ .idea/libraries/simplegraphics2.xml	(date 1602883058535)
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="simplegraphics">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/lib/simplegraphics.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"VcsDirectoryMappings\">\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/vcs.xml	(date 1602883058546)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/simplegfx-handson.iml\" filepath=\"$PROJECT_DIR$/simplegfx-handson.iml\" />\n    </modules>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/modules.xml	(date 1602883058553)
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/simplegfx-handson.iml" filepath="$PROJECT_DIR$/simplegfx-handson.iml" />
+      <module fileurl="file://$PROJECT_DIR$/manurami.iml" filepath="$PROJECT_DIR$/manurami.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"JavadocGenerationManager\">\n    <option name=\"OUTPUT_DIRECTORY\" value=\"$PROJECT_DIR$/../javadoc\" />\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_14\" default=\"false\" project-jdk-name=\"openjdk-15 (2)\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 0ff2d6ad75c5734cabe742501a05f8880cd4160f)
+++ .idea/misc.xml	(date 1602883058560)
@@ -1,9 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="JavadocGenerationManager">
-    <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/../javadoc" />
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_14" default="false" project-jdk-name="openjdk-15 (2)" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_14" project-jdk-name="14" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
